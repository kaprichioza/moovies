[{"C:\\work\\moovies\\src\\index.js":"1","C:\\work\\moovies\\src\\reportWebVitals.js":"2","C:\\work\\moovies\\src\\stores\\movieStore.ts":"3","C:\\work\\moovies\\src\\services\\httpTransport.ts":"4","C:\\work\\moovies\\src\\components\\header\\header.jsx":"5","C:\\work\\moovies\\src\\App.jsx":"6","C:\\work\\moovies\\src\\components\\genresList\\genresList.jsx":"7","C:\\work\\moovies\\src\\components\\genreItems\\genreItems.jsx":"8","C:\\work\\moovies\\src\\components\\movieDetails\\movieDetails.jsx":"9"},{"size":504,"mtime":1613913994165,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1612285481000,"results":"12","hashOfConfig":"11"},{"size":1253,"mtime":1616238212018,"results":"13","hashOfConfig":"11"},{"size":203,"mtime":1612288155678,"results":"14","hashOfConfig":"11"},{"size":590,"mtime":1616865763319,"results":"15","hashOfConfig":"11"},{"size":824,"mtime":1616402086739,"results":"16","hashOfConfig":"11"},{"size":1092,"mtime":1616238529891,"results":"17","hashOfConfig":"11"},{"size":1183,"mtime":1616867081583,"results":"18","hashOfConfig":"11"},{"size":3135,"mtime":1616925456795,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"16dzwoy",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\work\\moovies\\src\\index.js",[],["43","44"],"C:\\work\\moovies\\src\\reportWebVitals.js",[],"C:\\work\\moovies\\src\\stores\\movieStore.ts",["45"],"import { makeAutoObservable, makeObservable } from \"mobx\";\r\nimport { httpTransport } from \"../services/httpTransport\";\r\nimport { createContext } from \"react\"\r\n\r\nexport const MoviesContext = createContext(null);\r\nexport class MovieStore {\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n    movies = [];\r\n    filmData = null;\r\n    isLoading = true;\r\n    fetch = async () => {\r\n        const response = await httpTransport.get('/movies');\r\n        this.movies = response.data.movies;\r\n        this.isLoading = false;\r\n    }\r\n    get total() {\r\n        return this.movies.length;\r\n    }\r\n    filmsByGenre = (genre: string) => {\r\n        return this.movies.filter((filmData: any) => filmData.genres.some((item: string) => item === genre));\r\n    }\r\n    get genres () {\r\n        const genres = new Set();\r\n        this.movies.forEach((item: any) => {\r\n            item.genres.forEach((genre: string) => {\r\n                genres.add(genre);\r\n            });\r\n        });\r\n        return Array.from(genres);\r\n    }\r\n    fetchFilm = async (slug: string) => {\r\n        this.isLoading = true;\r\n        const response = await httpTransport.get(`/movies/${slug}`);\r\n        this.filmData = response.data;\r\n        this.isLoading = false;\r\n    }\r\n}\r\n",["46","47"],"C:\\work\\moovies\\src\\services\\httpTransport.ts",[],"C:\\work\\moovies\\src\\components\\header\\header.jsx",[],"C:\\work\\moovies\\src\\App.jsx",[],"C:\\work\\moovies\\src\\components\\genresList\\genresList.jsx",["48"],"import { Typography } from '@material-ui/core';\r\nimport React, { useEffect, useContext } from 'react';\r\nimport { GenreItems } from '../genreItems/genreItems';\r\nimport style from './genresList.module.css'\r\nimport { MoviesContext } from '../../stores/movieStore';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nexport const GenresList = observer(() => {\r\n    const movieStore = useContext(MoviesContext);\r\n    const { isLoading, fetch, filmsByGenre, genres } = movieStore;\r\n    useEffect(() => {\r\n        fetch()\r\n    }, []);   \r\n    return (\r\n        <div>\r\n            { isLoading\r\n                ? (<> is loading...</>)\r\n                : (<div className={style.wrapper}>\r\n                    {genres.map((genre) =>\r\n                        <div className={style.genreWrapper} key={genre} datatype={genre}>\r\n                            <Typography variant=\"h5\" className={style.genreName}>{genre}</Typography>\r\n                            <GenreItems filmsData={filmsByGenre(genre)} />\r\n                        </div>\r\n                    )}\r\n                </div>)}\r\n        </div>)\r\n});","C:\\work\\moovies\\src\\components\\genreItems\\genreItems.jsx",["49"],"import React from 'react'\r\nimport style from './genreItems.module.css'\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper.scss';\r\nimport { StylesProvider, Typography } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const GenreItems = (props) => {\r\n    const { filmsData } = props;\r\n    const divStyle = {\r\n        width: '100%',\r\n    };\r\n    return (\r\n        <div className={style.filmWrapper}>\r\n            <Swiper spaceBetween={150}\r\n                slidesPerView={'auto'}\r\n                style={divStyle}\r\n                slidesOffsetAfter={50}\r\n                className=\"swiper-container\">\r\n                {filmsData.map(({ slug, poster, title }) =>\r\n                <SwiperSlide className={style.swiperSlide} key={title}>\r\n                    <Link to={`/movies/${slug}`} className={style.path}>\r\n                        <div>\r\n                            <img src={poster} alt=\"poster\" />\r\n                        </div>\r\n                        <Typography variant=\"h6\">{title}</Typography>\r\n                    </Link>\r\n                </SwiperSlide>\r\n            )}\r\n            </Swiper>\r\n        </div>\r\n    )\r\n}","C:\\work\\moovies\\src\\components\\movieDetails\\movieDetails.jsx",["50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":30,"nodeType":"57","messageId":"58","endLine":1,"endColumn":44},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"59","severity":1,"message":"60","line":13,"column":8,"nodeType":"61","endLine":13,"endColumn":10,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":5,"column":10,"nodeType":"57","messageId":"58","endLine":5,"endColumn":24},{"ruleId":"59","severity":1,"message":"65","line":30,"column":8,"nodeType":"61","endLine":30,"endColumn":10,"suggestions":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"@typescript-eslint/no-unused-vars","'makeObservable' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetch'. Either include it or remove the dependency array.","ArrayExpression",["69"],"no-unused-vars","'StylesProvider' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchFilm' and 'id'. Either include them or remove the dependency array.",["70"],"no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},"Update the dependencies array to be: [fetch]",{"range":"75","text":"76"},"Update the dependencies array to be: [fetchFilm, id]",{"range":"77","text":"78"},[520,522],"[fetch]",[1069,1071],"[fetchFilm, id]"]